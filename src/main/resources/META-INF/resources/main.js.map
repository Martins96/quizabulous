{"version":3,"sources":["./src/app/homepages/master-home/master-quest-carousel/master-carousel-view/master-carousel-view.component.ts","./src/app/homepages/master-home/master-quest-carousel/master-carousel-view/master-carousel-view.component.html","./src/app/homepages/competitor-home/competitor-home.component.ts","./src/app/homepages/competitor-home/competitor-home.component.html","./src/app/cookie-utils.ts","./src/environments/environment.ts","./src/app/homepages/competitor-home/user-answer-to/user-quest-form/user-quest-form.component.ts","./src/app/homepages/competitor-home/user-answer-to/user-quest-form/user-quest-form.component.html","./src/app/rest-service.ts","./src/app/homepages/master-home/master-poll-mng/master-poll-results/master-poll-results.component.html","./src/app/homepages/master-home/master-poll-mng/master-poll-results/master-poll-results.component.ts","./src/app/homepages/master-home/master-poll-mng/master-poll-mng.component.ts","./src/app/homepages/master-home/master-poll-mng/master-poll-mng.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/home-login/home-login.component.ts","./src/app/home-login/home-login.component.html","./src/app/vo/QuestVO.ts","./src/app/app.module.ts","./src/app/homepages/master-home/master-custom-quest/master-custom-quest.component.ts","./src/app/homepages/master-home/master-custom-quest/master-custom-quest.component.html","./src/app/homepages/master-home/master-score/master-score.component.ts","./src/app/homepages/master-home/master-score/master-score.component.html","./src/app/homepages/master-home/master-home.component.ts","./src/app/homepages/master-home/master-home.component.html","./src/app/homepages/master-home/master-quest-carousel/master-quest-carousel.component.ts","./src/app/homepages/master-home/master-quest-carousel/master-quest-carousel.component.html","./src/app/homepages/competitor-home/user-answer-to/user-answer-to.component.ts","./src/app/homepages/competitor-home/user-answer-to/user-answer-to.component.html","./src/app/logged-user/logged-user.component.ts","./src/app/logged-user/logged-user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { QuestVO } from 'src/app/vo/QuestVO';\n\n@Component({\n  selector: 'app-master-carousel-view',\n  templateUrl: './master-carousel-view.component.html',\n  styleUrls: ['./master-carousel-view.component.css']\n})\nexport class MasterCarouselViewComponent implements OnInit {\n\n  @Input()\n  quest: QuestVO;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  isCorrect(id: number): boolean {\n    if (this.quest.correctAnswer === id) \n      return true;\n    return false;\n  }\n\n}\n","<div class=\"container\">\n    <span class=\"question\">{{ quest.question }}</span>\n    <div class=\"answers\">\n        <div>\n            <span [ngClass]=\"{'bold': isCorrect(1)}\">{{ quest.answer1 }}</span>\n        </div>\n        <div>\n            <span [ngClass]=\"{'bold': isCorrect(2)}\">{{ quest.answer2 }}</span>\n        </div>\n        <div>\n            <span [ngClass]=\"{'bold': isCorrect(3)}\">{{ quest.answer3 }}</span>\n        </div>\n        <div>\n            <span [ngClass]=\"{'bold': isCorrect(4)}\">{{ quest.answer4 }}</span>\n        </div>\n    </div>\n</div>","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { CookieManager } from 'src/app/cookie-utils';\nimport { RestService } from 'src/app/rest-service';\n\n@Component({\n  selector: 'app-competitor-home',\n  templateUrl: './competitor-home.component.html',\n  styleUrls: ['./competitor-home.component.css']\n})\nexport class CompetitorHomeComponent implements OnInit {\n\n  private jwt: string;\n\n  username: string;\n\n  constructor(private cookieMng: CookieManager, private rest: RestService) {\n    this.jwt = this.cookieMng.getCookie(\"user.jwt\");\n  }\n\n  ngOnInit(): void {\n    let getNameUrl: string = \"/user-manager/get-name\";\n    if (window.location.port === \"4200\") {\n      getNameUrl = \"http://localhost/user-manager/get-name\";\n    }\n\n    this.rest.sendGetRawText(getNameUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"text/plain\"\n    })).subscribe(resp => {\n      this.username = resp.body;\n    }, err => {\n      console.error(err);\n    })\n  }\n\n  exit(): void {\n    let confermation: boolean = window.confirm(\"Sei sicuro di uscire? Ci mancherai \" + this.username + \" :'(\");\n    if (confermation) {\n      this.cookieMng.deleteCookie(\"user.jwt\");\n      window.location.href = \"/\";\n    }\n  }\n\n}\n","<div class=\"toolbar\">\n    <div class=\"title\">\n        <span>Welcome {{ username }}</span>\n    </div>\n    <div class=\"exit-btn\">\n        <button (click)=\"exit()\">exit</button>\n    </div>\n</div>\n<div>\n    <app-user-answer-to></app-user-answer-to>\n</div>","import { Injectable } from '@angular/core';\r\n\r\nconst COOKIE_CONSENT: string= 'allowed-cookie-banner';\r\nconst COOKIE_CONSENT_EXPIRE_DAYS: number= 180;\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class CookieManager {\r\n    private isConsented: boolean = false;\r\n\r\n    constructor() {\r\n        this.isConsented = this.getCookie(COOKIE_CONSENT) === '1';\r\n    }\r\n\r\n    public getCookie(name: string) {\r\n        let ca: Array<string> = document.cookie.split(';');\r\n        let caLen: number = ca.length;\r\n        let cookieName = `${name}=`;\r\n        let c: string;\r\n\r\n        for (let i: number = 0; i < caLen; i += 1) {\r\n            c = ca[i].replace(/^\\s+/g, '');\r\n            if (c.indexOf(cookieName) == 0) {\r\n                return c.substring(cookieName.length, c.length);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public deleteCookie(name: string) {\r\n        this.setCookie(name, '', -1);\r\n    }\r\n\r\n    public setCookie(name: string, value: string | null, expireDays: number, path: string = '') {\r\n        let d:Date = new Date();\r\n        d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n        let expires:string = `expires=${d.toUTCString()}`;\r\n        let cpath:string = path ? `; path=${path}` : '';\r\n        document.cookie = `${name}=${value}; ${expires}${cpath}`;\r\n    }\r\n\r\n    public consent(isConsent: boolean, e: any) {\r\n        if (isConsent) {\r\n            this.setCookie(COOKIE_CONSENT, '1', COOKIE_CONSENT_EXPIRE_DAYS);\r\n            this.isConsented = true;\r\n            e.preventDefault();\r\n        }\r\n        return this.isConsented;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { RestService } from 'src/app/rest-service';\nimport { QuestVO } from 'src/app/vo/QuestVO';\n\n@Component({\n  selector: 'app-user-quest-form',\n  templateUrl: './user-quest-form.component.html',\n  styleUrls: ['./user-quest-form.component.css']\n})\nexport class UserQuestFormComponent {\n\n  @Input()\n  quest: QuestVO;\n  @Input()\n  private jwt: string;\n\n  answer: string;\n\n  @Output()\n  answered: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(private rest: RestService) { }\n\n  submitAnswer(): void {\n    if (!this.answer) {\n      window.alert(\"Seleziona una risposta!\");\n      return;\n    }\n\n    if (!window.confirm(\"Hai selezionato la risposta \" + this.answer + \" confermi l'invio?\")) {\n      return;\n    }\n\n    let sendAnswerUrl: string = \"/user/answer-to\";\n    if (window.location.port === \"4200\") {\n      sendAnswerUrl = \"http://localhost/user/answer-to\";\n    }\n\n    this.rest.sendPost(sendAnswerUrl, this.answer, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"content-type\": \"text/plain\"\n    })).subscribe(() => {\n      console.log(\"Risposta inviata\");\n      this.answered.emit(true);\n    }, err => {\n      if (err.status === 423) {\n        alert(\"Mi dispiace, risposta nulla - tempo scaduto.\\nIl master ha chiuso il poll.\");\n      } else {\n        console.error(err);\n      }\n      this.answered.emit(true);\n    })\n  }\n\n}\n","<div class=\"container\">\n    <form (ngSubmit)=\"submitAnswer()\">\n        <div class=\"quest-text\">\n            <span [innerHTML]=\"quest.question\"></span>\n        </div>\n        <div class=\"answer-options\">\n            <div class=\"answer-option\">\n                <input type=\"radio\" name=\"answer\" value=\"1\" [(ngModel)]=\"answer\" />\n                <label for=\"answer1\" [innerHTML]=\"quest.answer1\"></label>\n            </div>\n            <div class=\"answer-option\">\n                <input type=\"radio\" name=\"answer\" value=\"2\" [(ngModel)]=\"answer\" />\n                <label for=\"answer2\" [innerHTML]=\"quest.answer2\"></label>\n            </div>\n            <div class=\"answer-option\">\n                <input type=\"radio\" name=\"answer\" value=\"3\" [(ngModel)]=\"answer\" />\n                <label for=\"answer3\" [innerHTML]=\"quest.answer3\"></label>\n            </div>\n            <div class=\"answer-option\">\n                <input type=\"radio\" name=\"answer\" value=\"4\" [(ngModel)]=\"answer\" />\n                <label for=\"answer4\" [innerHTML]=\"quest.answer4\"></label>\n            </div>\n        </div>\n        <div>\n            <button class=\"submit-btn\" type=\"submit\">Invia risposta</button>\n        </div>\n    </form>\n</div>\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n\tconstructor(private http: HttpClient) { }\r\n\r\n\tsendPostRawText(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<string>> {\r\n\t\t// call\r\n\t\treturn this.http.post(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'text'\r\n\t\t});\r\n\t}\r\n\r\n\tsendGetRawText(url: string, headers: HttpHeaders): Observable<HttpResponse<string>> {\r\n\t\t// call\r\n\t\treturn this.http.get(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'text'\r\n\t\t});\r\n\t}\r\n\t\r\n\tsendPost<T>(url: string, body: any, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.post<T>(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'json'\r\n\t\t});\r\n\t}\r\n\t\r\n\tsendGet<T>(url: string, headers: HttpHeaders): Observable<HttpResponse<T>> {\r\n\t\treturn this.http.get<T>(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t});\r\n\t}\r\n\r\n\tsendPut<T>(url: string, headers?: HttpHeaders, body?: any): Observable<HttpResponse<T>> {\r\n\t\tif (!body) {\r\n\t\t\tbody = \"\";\r\n\t\t}\r\n\t\tif (!headers) {\r\n\t\t\theaders = new HttpHeaders();\r\n\t\t}\r\n\t\treturn this.http.put<T>(url, body, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response'\r\n\t\t});\r\n\t}\r\n\r\n\tgetImage(url: string, headers: HttpHeaders): Observable<Blob> {\r\n\t\treturn this.http.get(url, { \r\n\t\t\theaders,\r\n\t\t\tresponseType: 'blob' \r\n\t\t});\r\n\t}\r\n\r\n\tsendGetBlob(url: string, headers: HttpHeaders): Observable<HttpResponse<Blob>> {\r\n\t\t// call\r\n\t\treturn this.http.get(url, {\r\n\t\t\theaders,\r\n\t\t\tobserve: 'response',\r\n\t\t\tresponseType: 'blob'\r\n\t\t});\r\n\t}\r\n}\r\n","<div class=\"container\">\n    <h3>Ultimo poll</h3>\n    <div class=\"competitor-answers\" *ngFor=\"let entry of resultMap | keyvalue\">\n        <span class=\"competitor-name\">{{ entry.key }}</span>\n        <span class=\"competitor-answer\"><b>{{ entry.value }}</b></span>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-master-poll-results',\n  templateUrl: './master-poll-results.component.html',\n  styleUrls: ['./master-poll-results.component.css']\n})\nexport class MasterPollResultsComponent implements OnInit {\n\n  @Input()\n  private pollResults: any;\n\n  resultMap: Map<string, string> = new Map();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const keys: string[] = Object.keys(this.pollResults);\n    keys.forEach(k => {\n      const v: number = this.pollResults[k];\n      this.resultMap.set(k, v.toString());\n    })\n  }\n\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\nimport { CookieManager } from 'src/app/cookie-utils';\nimport { RestService } from 'src/app/rest-service';\n\n@Component({\n  selector: 'app-master-poll-mng',\n  templateUrl: './master-poll-mng.component.html',\n  styleUrls: ['./master-poll-mng.component.css']\n})\nexport class MasterPollMngComponent implements OnDestroy, OnInit{\n\n  private jwt: string;\n  private subscription: Subscription;\n\n  statusPoll: string = \"Caricamento...\";\n  btnClicked: boolean = false;\n  pollResults: any;\n\n  constructor(cookieMng: CookieManager, private rest: RestService) {\n    this.jwt = cookieMng.getCookie(\"user.jwt\");\n  }\n\n  ngOnInit(): void {\n    // Every 3 sec\n    this.getStatusPoll();\n    const source = interval(3000);\n    this.subscription = source.subscribe(() => this.getStatusPoll());\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n\n  getStatusPoll(): void {\n    let statusPollUrl: string = \"/user-manager/poll-status\";\n    if (window.location.port === \"4200\")\n      statusPollUrl = \"http://localhost/user-manager/poll-status\";\n\n    this.rest.sendGetRawText(statusPollUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"text/plain\"\n    })).subscribe(resp => {\n      if (resp.body === \"Open\")\n        this.statusPoll = \"Aperto\";\n      else if (resp.body === \"Close\")\n        this.statusPoll = \"Chiuso\";\n      else\n        this.statusPoll = resp.body;\n    }, err => {\n      console.error(err)\n    }, () => {\n      this.btnClicked = false;\n    })\n\n  }\n\n\n  closeAndGetResults(): void {\n    this.btnClicked = true;\n    this.pollResults = undefined;\n    let closeAndResultsUrl: string = \"/master/close-and-get-answers\";\n    if (window.location.port === \"4200\")\n      closeAndResultsUrl = \"http://localhost/master/close-and-get-answers\";\n\n    this.rest.sendGet<any>(closeAndResultsUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"application/json\"\n    })).subscribe(resp => {\n      console.log(resp.body);\n      this.pollResults = resp.body;\n    }, err => {\n      console.error(err);\n    })\n\n  }\n}\n","<div class=\"container\">\n    <div class=\"poll-status\">\n        <span>Status del poll: <b [innerHTML]=\"statusPoll\"></b></span>\n    </div>\n    <div class=\"open-poll-section\">\n        <div class=\"close-poll\" *ngIf=\"statusPoll === 'Aperto' && !btnClicked\">\n            <button class=\"submit-btn\" (click)=\"closeAndGetResults()\">Chiudi il poll e vedi risultati</button>\n        </div>\n        <div class=\"poll-results\" *ngIf=\"pollResults\">\n            <app-master-poll-results [pollResults]=\"pollResults\"></app-master-poll-results>\n        </div>\n    </div>\n</div>","\r\n<div *ngIf=\"getJWT()\">\r\n  <app-logged-user></app-logged-user>\r\n</div>\r\n<div *ngIf=\"!getJWT()\">\r\n  <app-home-login></app-home-login>\r\n</div>","import { Component } from '@angular/core';\nimport { CookieManager } from './cookie-utils';\r\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\tprivate cookieJWT: string = \"\";\n\n\tconstructor(private cookieMng: CookieManager) {\n\t\tthis.cookieJWT = this.cookieMng.getCookie('user.jwt');\n\t}\n\n\tgetJWT(): string {\n\t\treturn this.cookieJWT;\n\t}\n}\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { CookieManager } from '../cookie-utils';\nimport { RestService } from '../rest-service';\n\n@Component({\n  selector: 'app-home-login',\n  templateUrl: './home-login.component.html',\n  styleUrls: ['./home-login.component.css']\n})\nexport class HomeLoginComponent implements OnInit {\n\n  teamCode: string;\n\n  private error: string;\n  serverError: boolean = false;\n  serverErrorMsg: string = null;\n\n  constructor(private cookieMng: CookieManager, private rest: RestService) { }\n\n  ngOnInit(): void {\n  }\n\n  submitLogin() {\n    this.serverError = true;\n    this.serverErrorMsg = null;\n    let loginUrl: string = \"/login\";\n    if (window.location.port === \"4200\")\n      loginUrl = \"http://localhost/login\";\n\n    this.rest.sendPostRawText(loginUrl, this.teamCode, new HttpHeaders({\n      \"content-type\": \"text/plain\"\n    })).subscribe(r => {\n      console.log(\"Ok from login:\" + r);\n      this.cookieMng.setCookie('user.jwt', r.body, 1);\n      window.location.href = \"/\";\n    }, err => {\n      this.error = err;\n      if (err.status >= 500){\n        this.serverError = true;\n        this.serverErrorMsg = err.message;\n      }\n    })\n  }\n\n  getError(): string {\n    return this.error;\n  }\n\n\n}\n","<div class=\"container\">\n  <form (ngSubmit)=\"submitLogin()\" class=\"login-form\">\n    <div class=\"form-container\">\n      <label for=\"teamCode\" class=\"form-title\">Inserisci il codice partecipante</label>\n      <input type=\"text\" id=\"teamCode\" name=\"teamCode\" [(ngModel)]=\"teamCode\" />\n      <button type=\"submit\">Login</button>\n    </div>\n  </form>\n</div>\n<div class=\"error\" *ngIf=\"serverError\">\n  <h1>Server Error, Aia! sentite lo sviluppatore (scarso)</h1>\n  <p>{{ serverErrorMsg }}</p>\n</div>\n<div class=\"version\">\n  <span>Version 0.1.2 beta</span>\n</div>","\r\nexport class QuestVO {\r\n\r\n    public question: string;\r\n\tpublic answer1: string;\r\n\tpublic answer2: string;\r\n\tpublic answer3: string;\r\n\tpublic answer4: string;\r\n\tpublic correctAnswer: number;\r\n\r\n}","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HomeLoginComponent } from './home-login/home-login.component';\nimport { LoggedUserComponent } from './logged-user/logged-user.component';\nimport { MasterHomeComponent } from './homepages/master-home/master-home.component';\nimport { CompetitorHomeComponent } from './homepages/competitor-home/competitor-home.component';\nimport { MasterCustomQuestComponent } from './homepages/master-home/master-custom-quest/master-custom-quest.component';\nimport { MasterPollMngComponent } from './homepages/master-home/master-poll-mng/master-poll-mng.component';\nimport { MasterPollResultsComponent } from './homepages/master-home/master-poll-mng/master-poll-results/master-poll-results.component';\nimport { UserAnswerToComponent } from './homepages/competitor-home/user-answer-to/user-answer-to.component';\nimport { UserQuestFormComponent } from './homepages/competitor-home/user-answer-to/user-quest-form/user-quest-form.component';\nimport { MasterScoreComponent } from './homepages/master-home/master-score/master-score.component';\nimport { MasterQuestCarouselComponent } from './homepages/master-home/master-quest-carousel/master-quest-carousel.component';\nimport { MasterCarouselViewComponent } from './homepages/master-home/master-quest-carousel/master-carousel-view/master-carousel-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeLoginComponent,\n    LoggedUserComponent,\n    MasterHomeComponent,\n    CompetitorHomeComponent,\n    MasterCustomQuestComponent,\n    MasterPollMngComponent,\n    MasterPollResultsComponent,\n    UserAnswerToComponent,\n    UserQuestFormComponent,\n    MasterScoreComponent,\n    MasterQuestCarouselComponent,\n    MasterCarouselViewComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { CookieManager } from 'src/app/cookie-utils';\nimport { RestService } from 'src/app/rest-service';\nimport { QuestVO } from 'src/app/vo/QuestVO';\n\n@Component({\n  selector: 'app-master-custom-quest',\n  templateUrl: './master-custom-quest.component.html',\n  styleUrls: ['./master-custom-quest.component.css']\n})\nexport class MasterCustomQuestComponent {\n\n  jwt: string;\n\n  isVisile: boolean = true;\n\n  questField: string;\n  answer1: string;\n  answer2: string;\n  answer3: string;\n  answer4: string;\n\n  correctAnswer: string;\n\n  constructor(private cookieMng: CookieManager, private rest: RestService) {\n    this.jwt = this.cookieMng.getCookie(\"user.jwt\");\n  }\n\n\n  sendCustomQuest(): void {\n    if (!window.confirm(\"Sicuro di inviare e avviare la quest?\\n\" +\n        \"Se non hai chiuso la precedente, la annullerai e perderai le risposte.\")) {\n      return;\n    }\n\n    let newQuestUrl: string = \"/master/start-custom-quest\";\n    if (window.location.port === \"4200\")\n      newQuestUrl = \"http://localhost/master/start-custom-quest\";\n\n    let body: QuestVO = new QuestVO();\n    body.question = this.questField;\n    body.answer1 = this.answer1;\n    body.answer2 = this.answer2;\n    body.answer3 = this.answer3;\n    body.answer4 = this.answer4;\n    body.correctAnswer = Number.parseInt(this.correctAnswer);\n\n    this.rest.sendPost(newQuestUrl, body, new HttpHeaders({\n      \"content-type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + this.jwt\n    })).subscribe(() => {\n      this.questField = \"\";\n      this.answer1 = \"\";\n      this.answer2 = \"\";\n      this.answer3 = \"\";\n      this.answer4 = \"\";\n      this.correctAnswer = undefined;\n      window.alert(\"Richiesta effettuata, poll aperto\");\n    }, err => {\n      console.error(err);\n    })\n  }\n\n  showHide(): void {\n    this.isVisile = !this.isVisile;\n  }\n\n  titleText(): string {\n    if (!this.isVisile)\n      return \"Custom Quest\";\n    else\n      return \"\";\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"show-component\" (click)=\"showHide()\">\n        <span [innerHTML]=\"titleText()\"></span>\n        <div class=\"triangle\">\n            <svg height=\"15\" width=\"15\" class=\"triangle-svg\" [ngClass]=\"{'rotate-triangle': !isVisile}\">\n                <polygon points=\"6,1 2,10 10,10\"/>\n                Sorry, your browser does not support inline SVG.\n          </svg>\n        </div>\n    </div>\n    <!------------->\n    <div class=\"contents\" [ngClass]=\"{'hide': !isVisile}\">\n        <form class=\"custom-quest-form\" (ngSubmit)=\"sendCustomQuest()\">\n            <div class=\"form-container\">\n                <div class=\"quest\">\n                    <label>Quest personalizzata:</label>\n                    <textarea id=\"quest\" name=\"questField\" [(ngModel)]=\"questField\" class=\"quest-field\" ></textarea>\n                </div>\n                <div class=\"answers\">\n                    <span>Risposte proposte:</span>\n                    <div>\n                        <label for=\"answer1\" class=\"a1lbl\">1</label>\n                        <input id=\"answer1\" name=\"answer1\" [(ngModel)]=\"answer1\" class=\"answer1\"/>\n                    </div>\n                    <div>\n                        <label for=\"answer2\" class=\"a2lbl\">2</label>\n                        <input id=\"answer2\" name=\"answer2\" [(ngModel)]=\"answer2\" class=\"answer2\"/>\n                    </div>\n                    <div>\n                        <label for=\"answer3\" class=\"a3lbl\">3</label>\n                        <input id=\"answer3\" name=\"answer3\" [(ngModel)]=\"answer3\" class=\"answer3\"/>\n                    </div>\n                    <div>\n                        <label for=\"answer4\" class=\"a4lbl\">4</label>\n                        <input id=\"answer4\" name=\"answer4\" [(ngModel)]=\"answer4\" class=\"answer4\"/>\n                    </div>\n                </div>\n                <div class=\"correct-answer\">\n                    <label>Correct answer is:</label>\n                    <select id=\"correctAnswer\" name=\"correctAnswer\" [(ngModel)]=\"correctAnswer\">\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"submit\">\n                <button type=\"submit\" class=\"submit-btn\">Invia quest personalizzata</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { CookieManager } from 'src/app/cookie-utils';\nimport { RestService } from 'src/app/rest-service';\n\n@Component({\n  selector: 'app-master-score',\n  templateUrl: './master-score.component.html',\n  styleUrls: ['./master-score.component.css']\n})\nexport class MasterScoreComponent {\n\n  private jwt: string;\n  isVisible: boolean = true;\n\n  resultMap: Map<string, string> = new Map();\n\n  constructor(cookieMng: CookieManager, private rest: RestService) { \n    this.jwt = cookieMng.getCookie(\"user.jwt\");\n  }\n\n  titleText(): string {\n    if (!this.isVisible)\n      return \"Risultati finali\";\n    else\n      return \"\";\n  }\n\n  showHide(): void {\n    this.isVisible = !this.isVisible;\n  }\n\n  getResultScore() {\n    let statusPollUrl: string = \"/master/get-scores\";\n    if (window.location.port === \"4200\")\n      statusPollUrl = \"http://localhost/master/get-scores\";\n\n    this.rest.sendGet<any>(statusPollUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"application/json\"\n    })).subscribe(resp => {\n      const body = resp.body;\n      const keys: string[] = Object.keys(body);\n      keys.forEach(k => {\n        const v: number = body[k];\n        this.resultMap.set(k, v.toString());\n      })\n    }, err => {\n      console.error(err)\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"show-component\" (click)=\"showHide()\">\n        <span [innerHTML]=\"titleText()\"></span>\n        <div class=\"triangle\">\n            <svg height=\"15\" width=\"15\" class=\"triangle-svg\" [ngClass]=\"{'rotate-triangle': !isVisible}\">\n                <polygon points=\"6,1 2,10 10,10\"/>\n                Sorry, your browser does not support inline SVG.\n          </svg>\n        </div>\n    </div>\n    <div class=\"contents\" [ngClass]=\"{'hide': !isVisible}\">\n        <button (click)=\"getResultScore()\" class=\"submit-btn refresh-btn\">Refresh risultati</button>\n        <table>\n            <tr class=\"table-title\">\n                <td><b>Nome</b></td>\n                <td><b>Punti</b></td>\n            </tr>\n            <tr class=\"competitor-results\" *ngFor=\"let entry of resultMap | keyvalue\">\n                <td class=\"competitor-name\"><i>{{ entry.key }}</i></td>\n                <td class=\"competitor-points\">{{ entry.value }}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { CookieManager } from 'src/app/cookie-utils';\n\n@Component({\n  selector: 'app-master-home',\n  templateUrl: './master-home.component.html',\n  styleUrls: ['./master-home.component.css']\n})\nexport class MasterHomeComponent {\n\n  constructor(private cookieMng: CookieManager) { }\n\n\n  exit(): void {\n    let confermation: boolean = window.confirm(\"Sei sicuro di uscire? Ci mancherai master :'(\");\n    if (confermation) {\n      this.cookieMng.deleteCookie(\"user.jwt\");\n      window.location.href = \"/\";\n    }\n  }\n\n\n}\n","<div class=\"toolbar\">\n    <div class=\"title\">\n        <span>Welcome Master</span>\n    </div>\n    <div class=\"exit-btn\">\n        <button (click)=\"exit()\">exit</button>\n    </div>\n</div>\n<div class=\"close-poll\">\n    <app-master-poll-mng></app-master-poll-mng>\n</div>\n<div class=\"custom-quest\">\n    <app-master-custom-quest></app-master-custom-quest>\n</div>\n<div class=\"score-summary\">\n    <app-master-score></app-master-score>\n</div>\n<div class=\"quest-carousel\">\n    <app-master-quest-carousel></app-master-quest-carousel>\n</div>","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { CookieManager } from 'src/app/cookie-utils';\nimport { RestService } from 'src/app/rest-service';\nimport { QuestVO } from 'src/app/vo/QuestVO';\n\n@Component({\n  selector: 'app-master-quest-carousel',\n  templateUrl: './master-quest-carousel.component.html',\n  styleUrls: ['./master-quest-carousel.component.css']\n})\nexport class MasterQuestCarouselComponent implements OnInit {\n\n  private jwt: string;\n  isVisible: boolean = true;\n\n  questSelected: QuestVO;\n\n  selectedId: string = \"\";\n  currentId: number = 0;\n  maxQuests: number;\n\n  constructor(cookieMng: CookieManager, private rest: RestService) { \n    this.jwt = cookieMng.getCookie(\"user.jwt\");\n  }\n\n  ngOnInit(): void {\n    let maxNumUrl: string = \"/master/saved-quests-number\";\n    if (window.location.port === \"4200\")\n      maxNumUrl = \"http://localhost/master/saved-quests-number\";\n\n    this.rest.sendGetRawText(maxNumUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"text/plain\"\n    })).subscribe(resp => {\n      this.maxQuests = Number(resp.body);\n    }, err => {\n      console.error(err)\n    })\n  }\n\n  titleText(): string {\n    if (!this.isVisible)\n      return \"Quest configurate\";\n    else\n      return \"\";\n  }\n\n  showHide(): void {\n    this.isVisible = !this.isVisible;\n  }\n\n  inputCheck(): void {\n    const newVal: string = (<HTMLInputElement>document.getElementById(\"selectedId\")).value;\n    if (newVal === \"\") {\n      this.selectedId = newVal;\n    } else if (newVal.includes(\".\")) {\n      (<HTMLInputElement>document.getElementById(\"selectedId\")).value = this.selectedId;\n    } else if (!Number.isInteger(Number(newVal))) {\n      (<HTMLInputElement>document.getElementById(\"selectedId\")).value = this.selectedId;\n    } else {\n      this.selectedId = newVal;\n    }\n  }\n\n  getQuestSelected(): void {\n    const id: number = Number(this.selectedId);\n    this.getQuest(id);\n  }\n\n  getQuest(id: number): void {\n    id--;\n    let getByIdUrl: string = \"/master/saved-quests/\" + id;\n    if (window.location.port === \"4200\")\n      getByIdUrl = \"http://localhost/master/saved-quests/\" + id;\n\n    this.rest.sendGet<QuestVO>(getByIdUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"application/json\"\n    })).subscribe(resp => {\n      this.questSelected = resp.body;\n    }, err => {\n      console.error(err)\n    })\n  }\n\n  increaseDisabled(): boolean {\n    if (this.currentId < this.maxQuests)\n      return false;\n    return true;\n  }\n\n  increase(): void {\n    this.currentId++;\n    this.getQuest(this.currentId);\n  }\n\n  decrease(): void {\n    this.currentId--;\n    this.getQuest(this.currentId);\n  }\n\n  decreaseDisabled(): boolean {\n    if (this.currentId > 1)\n      return false;\n    return true;\n  }\n\n  startQuest(): void {\n    if (!window.confirm(\"Sicuro di inviare e avviare la quest?\\n\" +\n        \"Se non hai chiuso la precedente, la annullerai e perderai le risposte.\")) {\n      return;\n    }\n    \n    const id = this.currentId - 1;\n    let getByIdUrl: string = \"/master/start-saved-quest/\" + id;\n    if (window.location.port === \"4200\")\n      getByIdUrl = \"http://localhost/master/start-saved-quest/\" + id;\n\n    this.rest.sendPut<QuestVO>(getByIdUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"application/json\"\n    })).subscribe(resp => {\n      this.questSelected = resp.body;\n    }, err => {\n      console.error(err)\n    })\n\n    this.questSelected = undefined;\n    this.currentId = 0;\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"show-component\" (click)=\"showHide()\">\n        <span [innerHTML]=\"titleText()\"></span>\n        <div class=\"triangle\">\n            <svg height=\"15\" width=\"15\" class=\"triangle-svg\" [ngClass]=\"{'rotate-triangle': !isVisible}\">\n                <polygon points=\"6,1 2,10 10,10\"/>\n                Sorry, your browser does not support inline SVG.\n            </svg>\n        </div>\n    </div>\n    <div class=\"contents\" [ngClass]=\"{'hide': !isVisible}\">\n        <div class=\"navigation-menu\">\n            <button class=\"move-left\" [disabled]=\"decreaseDisabled()\" (click)=\"decrease()\"><</button>\n            <span>{{ currentId }} / {{ maxQuests }}</span>\n            <div class=\"go-to-elem\">\n                <input type=\"text\" name=\"selectedId\" id=\"selectedId\" (keyup)=\"inputCheck()\" />\n                <button class=\"by-id-btn\" (click)=\"getQuestSelected()\">vai</button>\n            </div>\n            <button class=\"move-right\" [disabled]=\"increaseDisabled()\" (click)=\"increase()\">></button>\n        </div>\n        <div class=\"carousel-elem\" *ngIf=\"questSelected\">\n            <app-master-carousel-view [quest]=\"questSelected\"></app-master-carousel-view>\n        </div>\n        <div class=\"start-btn\" *ngIf=\"questSelected\">\n            <button (click)=\"startQuest()\" class=\"submit-btn start-quest-btn\">Seleziona questa quest</button>\n        </div>\n    </div>\n</div>","import { HttpHeaders } from '@angular/common/http';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { interval, Observable, Subscription } from 'rxjs';\nimport { CookieManager } from 'src/app/cookie-utils';\nimport { RestService } from 'src/app/rest-service';\nimport { QuestVO } from 'src/app/vo/QuestVO';\n\n@Component({\n  selector: 'app-user-answer-to',\n  templateUrl: './user-answer-to.component.html',\n  styleUrls: ['./user-answer-to.component.css']\n})\nexport class UserAnswerToComponent implements OnInit, OnDestroy {\n\n  private jwt: string;\n  // Every 5 sec\n  private source: Observable<number> = interval(5000);\n  // Every 1 sec\n  private sourceDots: Observable<number> = interval(1000);\n  private subscription: Subscription;\n  private subscriptionDots: Subscription;\n\n  quest: QuestVO;\n  loadingDots: string = \".\";\n\n  constructor(cookieMng: CookieManager, private rest: RestService) {\n    this.jwt = cookieMng.getCookie(\"user.jwt\");\n  }\n\n  ngOnInit(): void {\n    this.verifyQuest();\n    this.subscription = this.source.subscribe(() => this.verifyQuest());\n    this.subscriptionDots = this.sourceDots.subscribe(() => this.dots());\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.subscriptionDots.unsubscribe();\n  }\n\n  verifyQuest(): void {\n    let getActualQuestUrl: string = \"/user/actual-quest\";\n    if (window.location.port === \"4200\")\n      getActualQuestUrl = \"http://localhost/user/actual-quest\";\n\n    let getPollStatusUrl: string = \"/user/new-quest-available\";\n      if (window.location.port === \"4200\")\n        getPollStatusUrl = \"http://localhost/user/new-quest-available\";\n\n\n\n    this.rest.sendGetRawText(getPollStatusUrl, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt\n    })).subscribe(resp => {\n      if (resp.body === \"true\") {\n        this.subscription.unsubscribe();\n        this.getQuest(getActualQuestUrl);\n      }\n    }, err => {\n      console.error(err);\n    });\n  }\n\n  private getQuest(url: string): void {\n    this.rest.sendGet<QuestVO>(url, new HttpHeaders({\n      \"Authorization\": \"Bearer \" + this.jwt,\n      \"Accept\": \"application/json\"\n    })).subscribe(resp => {\n      if (resp.status === 200) {\n        this.quest = resp.body;\n      } else {\n        console.error(resp);\n        this.subscription = this.source.subscribe(() => this.verifyQuest());\n      }\n    }, err => {\n      console.error(err);\n      this.subscription = this.source.subscribe(() => this.verifyQuest());\n    });\n  }\n\n\n  answered(answered: boolean): void {\n    if (answered) {\n      this.quest = undefined;\n      this.subscription = this.source.subscribe(() => this.verifyQuest());\n    }\n  }\n\n  dots() {\n    if (this.loadingDots === \".\"){\n      this.loadingDots = \"..\";\n    } else if (this.loadingDots === \"..\"){\n      this.loadingDots = \"...\";\n    } else if (this.loadingDots === \"...\"){\n      this.loadingDots = \".\";\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"!quest\">\n        <h3>In attesa del Master {{ loadingDots }}</h3>\n    </div>\n    <div *ngIf=\"quest\">\n        <h3>Nuova quest disponibile</h3>\n        <app-user-quest-form [quest]=\"quest\" [jwt]=\"jwt\" (answered)=\"answered($event)\"></app-user-quest-form>\n    </div>\n</div>\n","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { CookieManager } from '../cookie-utils';\nimport { RestService } from '../rest-service';\n\n@Component({\n  selector: 'app-logged-user',\n  templateUrl: './logged-user.component.html',\n  styleUrls: ['./logged-user.component.css']\n})\nexport class LoggedUserComponent implements OnInit {\n\n  myRole: string;\n\n  private jwt: string;\n\n  constructor(private cookieMng: CookieManager, private rest: RestService) { \n    this.jwt = cookieMng.getCookie(\"user.jwt\");\n  }\n\n  ngOnInit(): void {\n\n    let loginUrl: string = \"/user-manager/get-role\";\n    if (window.location.port === \"4200\")\n      loginUrl = \"http://localhost/user-manager/get-role\";\n\n    this.rest.sendGetRawText(loginUrl, new HttpHeaders({\n      \"content-type\": \"text/plain\",\n      \"Authorization\": \"Bearer \" + this.jwt\n    })).subscribe(r => {\n      this.myRole = r.body;\n    }, err => {\n      console.error(err);\n    })\n\n  }\n\n}\n","<div *ngIf=\"myRole === 'master'\">\n    <app-master-home></app-master-home>\n</div>\n<div *ngIf=\"myRole === 'competitor'\">\n    <app-competitor-home></app-competitor-home>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}